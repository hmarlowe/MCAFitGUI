#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.5
# In conjunction with Tcl version 8.6
#    Jun 05, 2015 04:45:38 PM
import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import mcafitGUI_support
import Tkinter, Tkconstants, tkFileDialog
import GaussFit as gf
import curvefitting
import pdb
import inspect
import numpy as np
import matplotlib.pyplot as plt
plt.ion()

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    root.title('MCAFit')
    geom = "435x395"
    root.geometry(geom)
    mcafitGUI_support.set_Tk_var()
    w = New_Toplevel_1 (root)
    mcafitGUI_support.init(root, w)
    root.mainloop()

w = None
def create_New_Toplevel_1(root, param=None):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    w.title('New_Toplevel_1')
    geom = "435x395"
    w.geometry(geom)
    mcafitGUI_support.set_Tk_var()
    w_win = New_Toplevel_1 (w)
    mcafitGUI_support.init(w, w_win, param)
    return w_win

def destroy_New_Toplevel_1():
    global w
    w.destroy()
    w = None


class New_Toplevel_1:
    def __init__(self, master=None):
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font10 = "-family {Segoe UI} -size 9 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        master.configure(background="#d9d9d9")
        master.configure(highlightbackground="#d9d9d9")
        master.configure(highlightcolor="black")


        self.menubar = Menu(master,font=font10,bg=_bgcolor,fg=_fgcolor)
        master.configure(menu = self.menubar)



        self.Fitparsframe = LabelFrame(master)
        self.Fitparsframe.place(relx=0.46, rely=0.33, relheight=0.42, relwidth=0.51)
        self.Fitparsframe.configure(relief=GROOVE)
        self.Fitparsframe.configure(foreground="black")
        self.Fitparsframe.configure(text='''Fit Parameters''')
        self.Fitparsframe.configure(background=_bgcolor)
        self.Fitparsframe.configure(highlightbackground="#d9d9d9")
        self.Fitparsframe.configure(highlightcolor="black")
        self.Fitparsframe.configure(width=220)

        self.ChiSq = Message(self.Fitparsframe)
        self.ChiSq.place(relx=0.33, rely=0.0, relheight=0.15, relwidth=0.25)
        self.ChiSq.configure(background="white")
        self.ChiSq.configure(font=font10)
        self.ChiSq.configure(foreground="black")
        self.ChiSq.configure(highlightbackground="#d9d9d9")
        self.ChiSq.configure(highlightcolor="black")
        self.ChiSq.configure(relief=GROOVE)
        self.ChiSq.configure(width=55)

        self.BG = Message(self.Fitparsframe)
        self.BG.place(relx=0.36, rely=0.18, relheight=0.15, relwidth=0.2)
        self.BG.configure(background="white")
        self.BG.configure(foreground="black")
        self.BG.configure(highlightbackground="#d9d9d9")
        self.BG.configure(highlightcolor="black")
        self.BG.configure(relief=GROOVE)
        self.BG.configure(width=44)


        self.Cent = Message(self.Fitparsframe)
        self.Cent.place(relx=0.36, rely=0.36, relheight=0.15, relwidth=0.2)
        self.Cent.configure(background="white")
        self.Cent.configure(foreground="black")
        self.Cent.configure(highlightbackground="#d9d9d9")
        self.Cent.configure(width=44)
	self.Cent.configure(relief=GROOVE)

        self.Amp = Message(self.Fitparsframe)
        self.Amp.place(relx=0.36, rely=0.55, relheight=0.15, relwidth=0.2)
        self.Amp.configure(background="white")
        self.Amp.configure(font=font10)
        self.Amp.configure(foreground="black")
        self.Amp.configure(highlightbackground="#d9d9d9")
        self.Amp.configure(highlightcolor="black")
        self.Amp.configure(relief=GROOVE)
        self.Amp.configure(width=44)

        self.FWHM = Message(self.Fitparsframe)
        self.FWHM.place(relx=0.36, rely=0.73, relheight=0.15, relwidth=0.2)
        self.FWHM.configure(background="white")
        self.FWHM.configure(font=font10)
        self.FWHM.configure(foreground="black")
        self.FWHM.configure(highlightbackground="#d9d9d9")
        self.FWHM.configure(highlightcolor="black")
        self.FWHM.configure(relief=GROOVE)
        self.FWHM.configure(width=44)


        self.DoF = Message(self.Fitparsframe)
        self.DoF.place(relx=0.73, rely=0.0, relheight=0.15, relwidth=0.15)
        self.DoF.configure(background="white")
        self.DoF.configure(font=font10)
        self.DoF.configure(foreground="black")
        self.DoF.configure(highlightbackground="#d9d9d9")
        self.DoF.configure(highlightcolor="black")
        self.DoF.configure(relief=GROOVE)
        self.DoF.configure(width=34)

        self.BGer = Message(self.Fitparsframe)
        self.BGer.place(relx=0.73, rely=0.18, relheight=0.15, relwidth=0.15)
        self.BGer.configure(background="white")
        self.BGer.configure(font=font10)
        self.BGer.configure(foreground="black")
        self.BGer.configure(highlightbackground="#d9d9d9")
        self.BGer.configure(highlightcolor="black")
        self.BGer.configure(relief=GROOVE)
        self.BGer.configure(width=34)

        self.Center = Message(self.Fitparsframe)
        self.Center.place(relx=0.73, rely=0.36, relheight=0.15, relwidth=0.15)
        self.Center.configure(background="white")
        self.Center.configure(font=font10)
        self.Center.configure(foreground="black")
        self.Center.configure(highlightbackground="#d9d9d9")
        self.Center.configure(highlightcolor="black")
        self.Center.configure(relief=GROOVE)
        self.Center.configure(width=34)

        self.Amper = Message(self.Fitparsframe)
        self.Amper.place(relx=0.73, rely=0.55, relheight=0.15, relwidth=0.15)
        self.Amper.configure(background="white")
        self.Amper.configure(font=font10)
        self.Amper.configure(foreground="black")
        self.Amper.configure(highlightbackground="#d9d9d9")
        self.Amper.configure(highlightcolor="black")
        self.Amper.configure(relief=GROOVE)
        self.Amper.configure(width=34)



        self.Label3 = Label(self.Fitparsframe)
        self.Label3.place(relx=0.59, rely=0.00, height=21, width=24)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background=_bgcolor)
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''DoF''')

        self.Label1 = Label(self.Fitparsframe)
        self.Label1.place(relx=0.59, rely=0.18, height=21, width=24)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background=_bgcolor)
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''+/-''')

        self.Label2 = Label(self.Fitparsframe)
        self.Label2.place(relx=0.59, rely=0.36, height=21, width=24)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background=_bgcolor)
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''+/-''')

        self.Label3 = Label(self.Fitparsframe)
        self.Label3.place(relx=0.59, rely=0.55, height=21, width=24)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background=_bgcolor)
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''+/-''')

        self.Label4 = Label(self.Fitparsframe)
        self.Label4.place(relx=0.05, rely=0.00, height=21, width=50)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background=_bgcolor)
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='Chisq')



        self.Label5 = Label(self.Fitparsframe)
        self.Label5.place(relx=0.05, rely=0.18, height=21, width=60)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background=_bgcolor)
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''BG Height''')

        self.Label6 = Label(self.Fitparsframe)
        self.Label6.place(relx=0.05, rely=0.36, height=21, width=52)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background=_bgcolor)
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''Centroid''')

        self.Label7 = Label(self.Fitparsframe)
        self.Label7.place(relx=0.09, rely=0.55, height=21, width=32)
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(background=_bgcolor)
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''Amp''')

        self.Label8 = Label(self.Fitparsframe)
        self.Label8.place(relx=0.05, rely=0.73, height=21, width=56)
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(background=_bgcolor)
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#d9d9d9")
        self.Label8.configure(highlightcolor="black")
        self.Label8.configure(text='''FWHM %''')

        self.Fit = Button(master)
        self.Fit.place(relx=0.18, rely=0.18, height=24, width=24)
        self.Fit.configure(activebackground="#d9d9d9")
        self.Fit.configure(activeforeground="#000000")
        self.Fit.configure(background=_bgcolor)
        self.Fit.configure(disabledforeground="#a3a3a3")
        self.Fit.configure(foreground="#000000")
        self.Fit.configure(highlightbackground="#d9d9d9")
        self.Fit.configure(highlightcolor="black")
        self.Fit.configure(pady="0")
        self.Fit.configure(text='''Fit''', command=self.go)

        self.Plot = Button(master)
        self.Plot.place(relx=0.07, rely=0.18, height=24, width=32)
        self.Plot.configure(activebackground="#d9d9d9")
        self.Plot.configure(activeforeground="#000000")
        self.Plot.configure(background=_bgcolor)
        self.Plot.configure(disabledforeground="#a3a3a3")
        self.Plot.configure(foreground="#000000")
        self.Plot.configure(highlightbackground="#d9d9d9")
        self.Plot.configure(highlightcolor="black")
        self.Plot.configure(pady="0")
        self.Plot.configure(text='''Plot''', command=self.plot)

        self.Close = Button(master)
        self.Close.place(relx=0.85, rely=0.05, height=24, width=40)
        self.Close.configure(activebackground="#d9d9d9")
        self.Close.configure(activeforeground="#000000")
        self.Close.configure(background=_bgcolor)
        self.Close.configure(disabledforeground="#a3a3a3")
        self.Close.configure(foreground="#000000")
        self.Close.configure(highlightbackground="#d9d9d9")
        self.Close.configure(highlightcolor="black")
        self.Close.configure(pady="0")
        self.Close.configure(text='''Close''', command = self.close)


	self.cvar=IntVar(master)
        self.Save = Checkbutton(master, command=self.cb)
        self.Save.place(relx=0.23, rely=0.05, relheight=0.06, relwidth=0.12)
        self.Save.configure(activebackground="#d9d9d9")
        self.Save.configure(activeforeground="#000000")
        self.Save.configure(background=_bgcolor)
        self.Save.configure(disabledforeground="#a3a3a3")
        self.Save.configure(foreground="#000000")
        self.Save.configure(highlightbackground="#d9d9d9")
        self.Save.configure(highlightcolor="black")
        self.Save.configure(justify=LEFT)
        self.Save.configure(text='''Save''')
        self.Save.configure(variable=self.cvar)

        self.Labelframe2 = LabelFrame(master)
        self.Labelframe2.place(relx=0.05, rely=0.38, relheight=0.34
                , relwidth=0.39)
        self.Labelframe2.configure(relief=GROOVE)
        self.Labelframe2.configure(foreground="black")
        self.Labelframe2.configure(text='''User Inputs for Fit''')
        self.Labelframe2.configure(background=_bgcolor)
        self.Labelframe2.configure(highlightbackground="#d9d9d9")
        self.Labelframe2.configure(highlightcolor="black")
        self.Labelframe2.configure(width=170)

        self.Label14 = Label(self.Labelframe2)
        self.Label14.place(relx=0.29, rely=0.15, height=21, width=34)
        self.Label14.configure(activebackground="#f9f9f9")
        self.Label14.configure(activeforeground="black")
        self.Label14.configure(background=_bgcolor)
        self.Label14.configure(disabledforeground="#a3a3a3")
        self.Label14.configure(foreground="#000000")
        self.Label14.configure(highlightbackground="#d9d9d9")
        self.Label14.configure(highlightcolor="black")
        self.Label14.configure(text='''LLD''')

        self.Label15 = Label(self.Labelframe2)
        self.Label15.place(relx=0.29, rely=0.3, height=21, width=28)
        self.Label15.configure(activebackground="#f9f9f9")
        self.Label15.configure(activeforeground="black")
        self.Label15.configure(background=_bgcolor)
        self.Label15.configure(disabledforeground="#a3a3a3")
        self.Label15.configure(foreground="#000000")
        self.Label15.configure(highlightbackground="#d9d9d9")
        self.Label15.configure(highlightcolor="black")
        self.Label15.configure(text='''ULD''')

        self.Label16 = Label(self.Labelframe2)
        self.Label16.place(relx=0.18, rely=0.44, height=21, width=66)
        self.Label16.configure(activebackground="#f9f9f9")
        self.Label16.configure(activeforeground="black")
        self.Label16.configure(background=_bgcolor)
        self.Label16.configure(disabledforeground="#a3a3a3")
        self.Label16.configure(foreground="#000000")
        self.Label16.configure(highlightbackground="#d9d9d9")
        self.Label16.configure(highlightcolor="black")
        self.Label16.configure(text='''Amp Guess''')

        self.Label17 = Label(self.Labelframe2)
        self.Label17.place(relx=0.18, rely=0.59, height=21, width=65)
        self.Label17.configure(activebackground="#f9f9f9")
        self.Label17.configure(activeforeground="black")
        self.Label17.configure(background=_bgcolor)
        self.Label17.configure(disabledforeground="#a3a3a3")
        self.Label17.configure(foreground="#000000")
        self.Label17.configure(highlightbackground="#d9d9d9")
        self.Label17.configure(highlightcolor="black")
        self.Label17.configure(text='''Cent Guess''')

	var=StringVar(master)
	var.set("0")
        self.LLDset = Spinbox(self.Labelframe2, from_=1.0, to=100.0)
        self.LLDset.place(relx=0.65, rely=0.15, relheight=0.14, relwidth=0.26)
        self.LLDset.configure(activebackground="#f9f9f9")
        self.LLDset.configure(background="white")
        self.LLDset.configure(buttonbackground="#d9d9d9")
        self.LLDset.configure(disabledforeground="#a3a3a3")
        self.LLDset.configure(font=font10)
        self.LLDset.configure(foreground="black")
        self.LLDset.configure(from_="0")
        self.LLDset.configure(highlightbackground="black")
        self.LLDset.configure(highlightcolor="black")
        self.LLDset.configure(insertbackground="black")
        self.LLDset.configure(selectbackground="#c4c4c4")
        self.LLDset.configure(selectforeground="black")
        self.LLDset.configure(takefocus="0")
        self.LLDset.configure(textvariable=var)
        self.LLDset.configure(to="999999")

	var=StringVar(master)
	var.set("200")
        self.ULDset = Spinbox(self.Labelframe2, from_=1.0, to=100.0)
        self.ULDset.place(relx=0.65, rely=0.3, relheight=0.14, relwidth=0.26)
        self.ULDset.configure(activebackground="#f9f9f9")
        self.ULDset.configure(background="white")
        self.ULDset.configure(buttonbackground="#d9d9d9")
        self.ULDset.configure(disabledforeground="#a3a3a3")
        self.ULDset.configure(font=font10)
        self.ULDset.configure(foreground="black")
        self.ULDset.configure(from_="0")
        self.ULDset.configure(highlightbackground="black")
        self.ULDset.configure(highlightcolor="black")
        self.ULDset.configure(insertbackground="black")
        self.ULDset.configure(selectbackground="#c4c4c4")
        self.ULDset.configure(selectforeground="black")
        self.ULDset.configure(takefocus="0")
        self.ULDset.configure(textvariable=var)
        self.ULDset.configure(to="999999")

	var=StringVar(master)
	var.set("100")
        self.Ampguess = Spinbox(self.Labelframe2, from_=1.0, to=100.0)
        self.Ampguess.place(relx=0.65, rely=0.44, relheight=0.14, relwidth=0.26)
        self.Ampguess.configure(activebackground="#f9f9f9")
        self.Ampguess.configure(background="white")
        self.Ampguess.configure(buttonbackground="#d9d9d9")
        self.Ampguess.configure(disabledforeground="#a3a3a3")
        self.Ampguess.configure(font=font10)
        self.Ampguess.configure(foreground="black")
        self.Ampguess.configure(from_="1.0")
        self.Ampguess.configure(highlightbackground="black")
        self.Ampguess.configure(highlightcolor="black")
        self.Ampguess.configure(insertbackground="black")
        self.Ampguess.configure(selectbackground="#c4c4c4")
        self.Ampguess.configure(selectforeground="black")
        self.Ampguess.configure(takefocus="0")
        self.Ampguess.configure(textvariable=var)
        self.Ampguess.configure(to="100000.0")

	var=StringVar(master)
	var.set("98")
        self.Centguess = Spinbox(self.Labelframe2, from_=1.0, to=100.0)
        self.Centguess.place(relx=0.65, rely=0.59, relheight=0.14, relwidth=0.26)
        self.Centguess.configure(activebackground="#f9f9f9")
        self.Centguess.configure(background="white")
        self.Centguess.configure(buttonbackground="#d9d9d9")
        self.Centguess.configure(disabledforeground="#a3a3a3")
        self.Centguess.configure(font=font10)
        self.Centguess.configure(foreground="black")
        self.Centguess.configure(from_="0.0")
        self.Centguess.configure(highlightbackground="black")
        self.Centguess.configure(highlightcolor="black")
        self.Centguess.configure(insertbackground="black")
        self.Centguess.configure(selectbackground="#c4c4c4")
        self.Centguess.configure(selectforeground="black")
        self.Centguess.configure(takefocus="0")
        self.Centguess.configure(textvariable=var)
        self.Centguess.configure(to="10000.0")

	optionList = (1024,512)
	self.MCAlen = StringVar()
	self.MCAlen.set(optionList[0])
	self.om = OptionMenu(master, self.MCAlen, *optionList)
	self.om.place(relx=0.83, rely=0.15)

        self.Label9 = Label(master)
        self.Label9.place(relx=0.63, rely=0.16, height=21, width=85)
        self.Label9.configure(activebackground="#f9f9f9")
        self.Label9.configure(activeforeground="black")
        self.Label9.configure(background=_bgcolor)
        self.Label9.configure(disabledforeground="#a3a3a3")
        self.Label9.configure(foreground="#000000")
        self.Label9.configure(highlightbackground="#d9d9d9")
        self.Label9.configure(highlightcolor="black")
        self.Label9.configure(text='''MCA Channels''')

        self.Open = Button(master)
        self.Open.place(relx=0.05, rely=0.05, height=24, width=61)
        self.Open.configure(activebackground="#d9d9d9")
        self.Open.configure(activeforeground="#000000")
        self.Open.configure(background=_bgcolor)
        self.Open.configure(disabledforeground="#a3a3a3")
        self.Open.configure(foreground="#000000")
        self.Open.configure(highlightbackground="#d9d9d9")
        self.Open.configure(highlightcolor="black")
        self.Open.configure(pady="0")
        self.Open.configure(text='''Open File''', command = self.get_file)

        self.Filename = Message(master)
        self.Filename.place(relx=0.16, rely=0.84, relheight=0.08, relwidth=0.8)
        self.Filename.configure(background=_bgcolor)
        self.Filename.configure(foreground="#000000")
        self.Filename.configure(highlightbackground="#d9d9d9")
        self.Filename.configure(highlightcolor="black")
        self.Filename.configure(relief=GROOVE)
        self.Filename.configure(text='''Please open an MCA file to fit''')
        self.Filename.configure(width=335)

        self.Label10 = Label(master)
        self.Label10.place(relx=0.01, rely=0.85, height=21, width=57)
        self.Label10.configure(activebackground="#f9f9f9")
        self.Label10.configure(activeforeground="black")
        self.Label10.configure(background=_bgcolor)
        self.Label10.configure(disabledforeground="#a3a3a3")
        self.Label10.configure(foreground="#000000")
        self.Label10.configure(highlightbackground="#d9d9d9")
        self.Label10.configure(highlightcolor="black")
        self.Label10.configure(text='''MCA File:''')


    def cb(self):
	if self.cvar.get(): 
		print "Save enabled"
	else: print "Save disabled"


    def get_file(self):
	#rootfn = Tkinter.Tk()

    	starting_file = tkFileDialog.askopenfilename(filetypes=[('MCA Files', '*.mca')])

		
	if starting_file: 
    		print 'Opened ', starting_file
		self.Filename.configure(text=starting_file)
		#rootfn.destroy()
   	else:
		print 'Error opening file'
		self.Filename.configure(text='File open error')
		#rootfn.destroy()	

    def close(self):
	root.destroy()

    def plot(self):

	fname=self.Filename.config('text')[4]
	f=open(fname,'r')
	print 'Plotting ', fname
	for i, l in enumerate(f): pass
	filelen=i+1
	mcalen=int(self.MCAlen.get())

	spec=np.genfromtxt(fname, skip_header=filelen-(mcalen+1), skip_footer=1)
	chan=np.arange(0,len(spec))
	plt.figure(1)
	plt.clf()
    	plt.plot(chan, spec)
	plt.title(fname)
	plt.xlabel('MCA Channel', fontsize=18)

    def go(self):
	mcalen = self.MCAlen.get()
	save=self.cvar.get()
	ULD=int(self.ULDset.get())
	LLD=int(self.LLDset.get())
	centguess=int(self.Centguess.get())
	ampguess=int(self.Ampguess.get())
	fname=self.Filename.config('text')[4]
	f=open(fname,'r')

	for i, l in enumerate(f): pass
	filelen=i+1
	mcalen=int(self.MCAlen.get())

	spec=np.genfromtxt(fname, skip_header=filelen-(mcalen+1), skip_footer=1)
	chan=np.arange(0,len(spec))
	speccut=spec[LLD:ULD]
	chancut=chan[LLD:ULD]

	#Find initial guesses
		

	widg=centguess*0.3/2
	guess=[0,ampguess,centguess,widg]
	
	"""
	GaussFit
	params - Fit parameters: Height of background, Amplitude, Shift, Width

	"""
	
	params, model, gerrs, chisq = gf.onedgaussfit(chancut, speccut, params=guess)
	print "~~~~~~~~~~~~~~~~\nFit parameters:\nBG height = ", round(params[0]), "\nCentroid = ", round(params[2],2), "\nAmp = ", round(params[1]), "\nFWHM = ", round(params[3]*2.35,2), "%\n~~~~~~~~~~~~~~~~"
	plt.figure(1)
	plt.clf()
	plt.plot(chancut, model)
	plt.xlim(LLD-100, ULD+100)
	i=np.where(speccut>0)
	#pdb.set_trace()

	chisq=sum(((speccut[i]-model[i])/np.sqrt(speccut[i]))**2)

	dof=len(chancut[i])-4
	rchisq=chisq/dof
	print params, gerrs, chisq, rchisq
	header='GaussFit params - Fit parameters: \nHeight of background, Amplitude, Shift, Width'

	params[3]=params[3]*2.35 #convert to FWHM from sigma
	H,A,X,W=params
	gerrs[3]=gerrs[3]*2.35
	data=np.array([params, gerrs, chisq])
	Her,Aer,Xer,Wer=gerrs # height, amp, centroid, width error
	res=W/X # fwhm %

	self.BG.configure(text=round(H,2))
	self.Cent.configure(text=round(X,2))
	self.Amp.configure(text=round(A,2))
	self.FWHM.configure(text=round(res,2))
	self.BGer.configure(text=round(Her,2))
	self.Center.configure(text=round(Xer,2))
	self.Amper.configure(text=round(Aer,2))
	self.ChiSq.configure(text=round(chisq,2))
	self.DoF.configure(text=dof)


	plt.clf()
 	plt.plot(chancut, speccut)
   	plt.plot(chancut,model)
   	plt.title(fname)
   	plt.xlabel('MCA Channel')

   	if save:
		plt.savefig(fname+'.png')
		f=open(fname+'fit.txt', 'w')
		f.write(fname+'\n')
		f.write(header+'\n'+str(params)+'\n'+'Errors: '+str(gerrs)+'\n'+'Chisq = '+str(chisq)+'DoF = '+str(dof))
		f.close()

    def auto_fit(LLD,ULD,Ampg,shiftg,spec, chan):



	speccut=spec[LLD:ULD]
	chancut=chan[LLD:ULD]

	#Find initial guesses
		

	widg=shiftg*0.3/2
	guess=[0,Ampg,shiftg,widg]
	
	"""
	GaussFit
	params - Fit parameters: Height of background, Amplitude, Shift, Width

	"""
	
	params, model, gerrs, chisq = gf.onedgaussfit(chancut, speccut, params=guess)
	print "~~~~~~~~~~~~~~~~\nFit parameters:\nBG height = ", round(params[0]), "\nCentroid = ", round(params[2],2), "\nAmp = ", round(params[1]), "\nFWHM = ", round(params[3]*2.35,2), "%\n~~~~~~~~~~~~~~~~"
	plt.figure(2)
	plt.clf()
	plt.plot(chancut, model)
	plt.xlim(LLD-100, ULD+100)





if __name__ == '__main__':
    vp_start_gui()



